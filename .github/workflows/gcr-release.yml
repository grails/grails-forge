name: Release to GCR
on:
  push:
    branches:
      - 6.0.x
jobs:
  deploy:
    name: Setup Gcloud Account
    runs-on: ubuntu-latest
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
      GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set the current release version
        id: release_version
        run: |
          release_version=${GITHUB_REF:11}
          sed -i "s/^projectVersion.*$/projectVersion\=${release_version}/" gradle.properties
          echo "release_version=${release_version}" >> $GITHUB_OUTPUT
      - name: Login
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      - name: Set up JDK
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Run Tests
        run: ./gradlew grails-forge-api:test grails-forge-web-netty:test
      - name: Build and Push Docker image and deploy to Cloud Run
        env:
          IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}:${{ steps.release_version.outputs.release_version }}"
          release_version: ${{ steps.release_version.outputs.release_version }}
        run: |
          ./gradlew grails-forge-web-netty:dockerBuild -PdockerImageName="$IMAGE_NAME"
          ./gradlew grails-forge-web-netty:dockerPush -PdockerImageName="$IMAGE_NAME" 
          gcloud run deploy ${{ secrets.GCP_PROJECT_ID }}-latest --image $IMAGE_NAME --region us-central1 --platform managed --allow-unauthenticated
          version="$(echo "${release_version//./}" | tr '[A-Z]' '[a-z]')"
          gcloud run deploy ${{ secrets.GCP_PROJECT_ID }}-$version --image $IMAGE_NAME --region us-central1 --platform managed --allow-unauthenticated


