plugins {
    id("com.github.johnrengelman.shadow")
    id("io.micronaut.application") version "3.7.10"
}

version project.projectVersion
group "org.grails.forge"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-graal")
    implementation(project(":grails-forge-core"))
    runtimeOnly "ch.qos.logback:logback-classic:1.4.11"
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.13.1'
    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation 'io.micronaut.flyway:micronaut-flyway'
    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "ch.qos.logback:logback-classic:1.4.11"
}
application {
    mainClass = "org.grails.forge.analytics.postgres.Main"
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.grails.forge.*")
    }
}
tasks.named('dockerfileNative') {
    // https://www.graalvm.org/latest/docs/getting-started/container-images/
    baseImage("ghcr.io/graalvm/jdk:ol8-java17-22.3.2")
}

tasks.named("dockerBuildNative") {
    images = [project.hasProperty("dockerImageName") ? project.getProperty("dockerImageName") : "grailsforge"]
}

tasks.named("dockerBuild") {
    images = [project.hasProperty("dockerImageName") ? project.getProperty("dockerImageName") : "grailsforge"]
}